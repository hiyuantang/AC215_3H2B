name: Build, Lint, and Test API Service

on:
  push:
    branches:
      - main
      - milestone4
  pull_request:
    branches:
      - main
      - milestone4

jobs:
  api-service:
    name: Build, Lint, and Test API Service
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image
      working-directory: src/api-service
      run: docker build --no-cache -t api-service .
    
    - name: Run Linting
      working-directory: src/api-service
      run: |
        docker run --rm \
          -e GCP_PROJECT="ac215-3h2b-yuantang" \
          -e CHROMADB_HOST="llm-rag-chromadb" \
          -e CHROMADB_PORT=8000 \
          -v ${{ github.workspace }}:/app \
          --user root \
          --entrypoint /bin/bash \
          api-service \
          -c "cd /app/src/api-service && PYTHONPATH=/app/src/api-service pipenv --python 3.10 install --dev && PYTHONPATH=/app/src/api-service pipenv run flake8 --config=flake8.ini ."

    - name: Run tests with coverage
      working-directory: src/api-service
      run: |
        docker run --rm \
          -e GCP_PROJECT="ac215-3h2b-yuantang" \
          -e CHROMADB_HOST="llm-rag-chromadb" \
          -e CHROMADB_PORT=8000 \
          -v ${{ github.workspace }}:/app \
          --user root \
          --entrypoint /bin/bash \
          api-service \
          -c "cd /app/src/api-service && ls -l /app && PYTHONPATH=/app/src/api-service pipenv --python 3.10 install --dev && PYTHONPATH=/app/src/api-service pipenv run pytest tests/ -v --cov=. --cov-report=xml && ls -l /app && ls -l /app/src/api-service"

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: src/api-service/coverage.xml
